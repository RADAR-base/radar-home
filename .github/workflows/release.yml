# Create release files
name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  # Build and test the code
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: 'package-lock.json'

      # Compile the code
      - name: Install dependencies
        run: npm install

      # Compile the code
      - name: Build code
        run: npm run build

      - name: compress dist
        run: zip -r dist dist
      
      - name: Get tag message
        id: tag
        run: |
          git fetch -f origin ${{ github.ref }}:${{ github.ref }}
          echo "tag-body=$(git tag -l --format='%(contents:subject)' ${{ github.ref_name }})" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist.zip
          generate_release_notes: true
          fail_on_unmatched_files: true
          body: ${{ steps.tag.outputs.tag-body }}

  docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: radarbase/radar-home

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Add Docker labels and tags
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # Setup docker build environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build frontend docker
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          # Use runtime labels from docker_meta_backend as well as fixed labels
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            maintainer=Joris Borgdorff <joris@thehyve.nl>
            org.opencontainers.image.description=RADAR-base home page
            org.opencontainers.image.authors=Joris Borgdorff <joris@thehyve.nl>
            org.opencontainers.image.vendor=RADAR-base
            org.opencontainers.image.licenses=Apache-2.0

      - name: Inspect docker image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
