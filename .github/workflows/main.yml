name: Main test

# Run in master and dev branches and in all pull requests to those branches
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  IMAGE_NAME: radar-home

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js 18
        uses: actions/setup-node@v5
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Build code
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
          retention-days: 5

  # Check that the docker image builds correctly
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase image name
        run: |
          echo "DOCKER_IMAGE=${REGISTRY}/${REPOSITORY,,}/${IMAGE_NAME}" >>${GITHUB_ENV}

      # Add Docker labels and tags
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}

      # Setup docker build environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker
        uses: docker/build-push-action@v6
        with:
          load: true
          context: .
          tags: ${{ steps.docker_meta.outputs.tags }}
          # Use runtime labels from docker_meta as well as fixed labels
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            maintainer=Peyman Mohtashami <peyman@thehyve.nl>
            org.opencontainers.image.authors=Peyman Mohtashami <peyman@thehyve.nl>
            org.opencontainers.image.description=RADAR-base home page
            org.opencontainers.image.vendor=RADAR-base
            org.opencontainers.image.licenses=Apache-2.0

      - name: Inspect docker image
        run: docker image inspect ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}

      # Push the image on the dev and master branches
      - name: Push image
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
